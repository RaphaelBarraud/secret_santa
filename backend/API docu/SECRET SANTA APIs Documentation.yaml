openapi: 3.0.3
info:
  title: SECRET SANTA APIs Documentation
  version: 1.0.0
  description: API used by the Secret Santa Application
paths:
  /draws/:
    get:
      operationId: draws_list
      description: Get the list of the draws sorted by descending creation_time
      summary: Get the draw sorted by descending creation_time
      tags:
      - draws
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Draw'
          description: ''
    post:
      operationId: draws_create
      description: Create a new draw in the Draw table
      summary: Add a draw
      tags:
      - draws
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrawPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DrawPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DrawPostRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrawPost'
          description: ''
  /draws/{draw_id}/:
    get:
      operationId: draws_retrieve
      description: Find draw in the draw table
      summary: Retrieve a draw
      parameters:
      - in: path
        name: draw_id
        schema:
          type: integer
        description: A unique integer value identifying this draw.
        required: true
      tags:
      - draws
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draw'
          description: ''
    delete:
      operationId: draws_destroy
      description: Delete a draw in the draw table
      summary: Remove a draw
      parameters:
      - in: path
        name: draw_id
        schema:
          type: integer
        description: A unique integer value identifying this draw.
        required: true
      tags:
      - draws
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /draws/{draw_id}/draw_results/:
    get:
      operationId: draws_draw_results_list
      description: Get the list of draw results for a given draw
      summary: Get the list of draw results
      parameters:
      - in: path
        name: draw_id
        schema:
          type: string
        required: true
      tags:
      - draws
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DrawResult'
          description: ''
    post:
      operationId: draws_draw_results_create
      description: Create a new draw result
      summary: Add a draw result
      parameters:
      - in: path
        name: draw_id
        schema:
          type: string
        required: true
      tags:
      - draws
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrawResultRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DrawResultRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DrawResultRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrawResult'
          description: ''
  /participants/:
    get:
      operationId: participants_list
      description: Get the list of all the participants with their blacklist
      summary: Get the list of participants
      tags:
      - participants
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant'
          description: ''
    post:
      operationId: participants_create
      description: Create a new participant in the participant table
      summary: Add a participant
      tags:
      - participants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParticipantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ParticipantRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
          description: ''
  /participants/{participant_id}/:
    get:
      operationId: participants_retrieve
      description: Find participant in the participant table
      summary: Retrieve a participant
      parameters:
      - in: path
        name: participant_id
        schema:
          type: integer
        description: A unique integer value identifying this participant.
        required: true
      tags:
      - participants
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
          description: ''
    delete:
      operationId: participants_destroy
      description: Delete a participant in the participant table
      summary: Remove a participant
      parameters:
      - in: path
        name: participant_id
        schema:
          type: integer
        description: A unique integer value identifying this participant.
        required: true
      tags:
      - participants
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /participants/{participant_id}/blacklists/:
    get:
      operationId: participants_blacklists_list
      description: Get the list of blacklisted participants for a given person
      summary: Get the list of blacklisted participants
      parameters:
      - in: path
        name: participant_id
        schema:
          type: string
        required: true
      tags:
      - participants
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Blacklist'
          description: ''
    post:
      operationId: participants_blacklists_create
      description: Create a new entry to the participant blacklist
      summary: Add a participant to the blacklist
      parameters:
      - in: path
        name: participant_id
        schema:
          type: string
        required: true
      tags:
      - participants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlacklistRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlacklistRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlacklistRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blacklist'
          description: ''
  /participants/{participant_id}/blacklists/{blacklist_id}/:
    delete:
      operationId: participants_blacklists_destroy
      description: Delete an entry to the participant blacklist
      summary: Remove a participant from the blacklist
      parameters:
      - in: path
        name: blacklist_id
        schema:
          type: string
        required: true
      - in: path
        name: participant_id
        schema:
          type: string
        required: true
      tags:
      - participants
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Blacklist:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        blacklisted:
          type: integer
      required:
      - blacklisted
      - id
    BlacklistRequest:
      type: object
      properties:
        blacklisted:
          type: integer
      required:
      - blacklisted
    Draw:
      type: object
      description: Serializer used for the draw except for the create method
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        creation_time:
          type: string
          format: date-time
          readOnly: true
        draw_result:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - creation_time
      - draw_result
      - id
      - name
    DrawPost:
      type: object
      description: Serializer used for the draw create method
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        creation_time:
          type: string
          format: date-time
          readOnly: true
        draw_result:
          type: array
          items:
            $ref: '#/components/schemas/DrawResult'
      required:
      - creation_time
      - draw_result
      - id
      - name
    DrawPostRequest:
      type: object
      description: Serializer used for the draw create method
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        draw_result:
          type: array
          items:
            $ref: '#/components/schemas/DrawResultRequest'
      required:
      - draw_result
      - name
    DrawResult:
      type: object
      description: Serializer used for the DrawResult
      properties:
        id:
          type: integer
          readOnly: true
        draw:
          type: integer
          readOnly: true
        giver:
          type: string
          maxLength: 100
        receiver:
          type: string
          maxLength: 100
      required:
      - draw
      - giver
      - id
      - receiver
    DrawResultRequest:
      type: object
      description: Serializer used for the DrawResult
      properties:
        giver:
          type: string
          minLength: 1
          maxLength: 100
        receiver:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - giver
      - receiver
    Participant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        blacklist:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - blacklist
      - first_name
      - id
      - last_name
    ParticipantRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 50
        last_name:
          type: string
          minLength: 1
          maxLength: 50
      required:
      - first_name
      - last_name
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
